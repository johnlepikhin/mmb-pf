# Generated by Django 3.2.9 on 2021-11-14 14:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Порядок отображения')),
                ('disabled', models.BooleanField(blank=True, default=False, help_text='Не отображать в меню')),
                ('personnel_access', models.BooleanField(default=False, help_text='Доступен для К-Р (отображается в личном кабинете)')),
                ('permission', models.CharField(blank=True, default='', help_text='Право отвечающее за доступ в элемент меню. Если не задано, меню будет отображаться всегда', max_length=128)),
                ('name', models.CharField(default='', help_text='Отображаемое имя', max_length=512, unique=True)),
                ('menu_type', models.CharField(choices=[('dropdown', 'dropdown'), ('fixed', 'fixed')], default='dropdown', help_text='Тип меню', max_length=128)),
                ('tid', models.CharField(default='', help_text='Уникальный идентификатор, латиница. Используется для поиска элемента на странице', max_length=512, unique=True)),
                ('icon', models.CharField(blank=True, default='', help_text='Отображаемая иконка, из https://fontawesome.com/icons?d=gallery&m=free Например: fas fa-user-shield', max_length=128)),
                ('items', models.JSONField(blank=True, default=list, help_text='Подкатегории')),
            ],
            options={
                'verbose_name_plural': 'Главное меню',
            },
        ),
        migrations.CreateModel(
            name='MMBPFGroups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('desc', models.TextField(blank=True, default='', help_text='Описание группы', max_length=2000)),
            ],
            options={
                'verbose_name_plural': 'Группы',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Имя настройки', max_length=128, unique=True)),
                ('option_type', models.CharField(choices=[('BooleanField', 'Булево значение'), ('PositiveIntegerField', 'Положительное целое число'), ('IntegerField', 'Целое число'), ('CharField', 'Строка'), ('TextField', 'Текст'), ('JsonField', 'Json'), ('DateField', 'Дата'), ('DateTimeField', 'Дата и время')], default='BooleanField', help_text='Тип опции', max_length=128)),
                ('desc', models.TextField(blank=True, default='', help_text='Описание настройки', max_length=2048)),
                ('BooleanField', models.BooleanField(blank=True, help_text='Булево значение')),
                ('PositiveIntegerField', models.PositiveIntegerField(blank=True, help_text='Положительное целое число', null=True)),
                ('IntegerField', models.IntegerField(blank=True, help_text='Целое число', null=True)),
                ('CharField', models.CharField(blank=True, help_text='Строка', max_length=1024)),
                ('TextField', models.TextField(blank=True, help_text='Текст')),
                ('JsonField', models.JSONField(blank=True, help_text='Json', null=True)),
                ('DateField', models.DateField(blank=True, help_text='Дата', null=True)),
                ('DateTimeField', models.DateTimeField(blank=True, help_text='Дата и время', null=True)),
            ],
            options={
                'verbose_name_plural': 'Настройки системы',
            },
        ),
        migrations.CreateModel(
            name='MMBPFUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('modification_date', models.DateTimeField(auto_now=True, help_text='Время последней модификации основных данных')),
                ('first_name', models.CharField(default='', help_text='Имя', max_length=512)),
                ('last_name', models.CharField(default='', help_text='Фамилия', max_length=512)),
                ('patronymic', models.CharField(blank=True, default='', help_text='Отчество', max_length=512)),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Мужской'), (2, 'Женский')], default=1)),
                ('phone', models.CharField(blank=True, default='', help_text='Телефон', max_length=128)),
                ('email', models.EmailField(blank=True, default='', help_text='Почта', max_length=254)),
                ('birth', models.DateField(blank=True, help_text='Дата рождения', null=True)),
                ('fact_address', models.CharField(blank=True, default='', help_text='Фактический адрес', max_length=1024)),
                ('user_desc', models.TextField(blank=True, default='', help_text='Заметки о пользователе', max_length=32768)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
